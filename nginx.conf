server {
  listen 80;
  server_name _;
  root /usr/share/nginx/html;
  index index.html;

  # Serve frontend assets directly
  location /assets/ { try_files $uri =404; }

  # Proxy API & backend dynamic endpoints
  location /api { proxy_pass http://app:8080/api; }
  location /search { proxy_pass http://app:8080/search; }
  location /import { proxy_pass http://app:8080/import; }
  location /media { proxy_pass http://app:8080/media; }

  # SPA fallback
  location / {
    try_files $uri $uri/ /index.html;
  }

  # Basic security headers (optional tweak)
  add_header X-Frame-Options SAMEORIGIN;
  add_header X-Content-Type-Options nosniff;
  add_header Referrer-Policy no-referrer-when-downgrade;
  add_header X-XSS-Protection "1; mode=block";
}
# syntax=docker/dockerfile:1
# --- Build Stage ---
FROM node:22-alpine AS build
WORKDIR /frontend
# Install dependencies
COPY frontend/package*.json ./
RUN npm ci
# Copy source
COPY frontend/ ./
# Build with optional API base override (empty by default since code includes /api in paths)
ARG VITE_API_BASE=""
ENV VITE_API_BASE=$VITE_API_BASE
RUN npm run build

# --- Runtime Stage ---
FROM nginx:1.27-alpine AS run
WORKDIR /usr/share/nginx/html
# Copy built assets
COPY --from=build /frontend/dist ./
# Nginx config for SPA + API proxy
COPY nginx.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
HEALTHCHECK --interval=30s --timeout=5s --start-period=20s --retries=5 \
  CMD wget -qO- http://localhost/ || exit 1

