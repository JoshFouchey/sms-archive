# ============================================================================
# sms-archive Environment Variables Example (rename to .env for production)
# ----------------------------------------------------------------------------
# Copy this file to `.env` and adjust values for your deployment.
# All variables are consumed by docker-compose for interpolation AND by the app
# (Spring Boot reads env vars for overridden properties like SMSARCHIVE_MEDIA_ROOT).
# ============================================================================

# ----------------------------------------------------------------------------
# Ports (Host side) - adjust if these ports are taken on your server
# ----------------------------------------------------------------------------
DB_PORT=5432            # Host port mapped to Postgres container 5432
APP_PORT=8070           # Host port mapped to backend Spring Boot 8080
FRONTEND_PORT=8071      # Host port mapped to frontend container port 80

# ----------------------------------------------------------------------------
# Database Configuration
# ----------------------------------------------------------------------------
DB_VERSION=15-alpine    # Postgres image tag (e.g. 16-alpine for newer)
DB_NAME=sms_archive     # Database name inside Postgres
DB_USER=sms_user        # Database user created / used by the app
DB_PASSWORD=sms_pass    # Strong password recommended (DO NOT keep default)

# ----------------------------------------------------------------------------
# Storage Paths (Host) - MUST exist before `docker compose up`
# ----------------------------------------------------------------------------
# Base deployment directory examples:
#   Standard local disk: /opt/stacks/sms-archive
#   Separate HDD / Nextcloud mount: /nextcloud/sms-archive
# Choose ONE base and keep variables consistent.
#
# PostgreSQL data directory (host): persistent database storage.
DB_DATA_HOST_PATH=/opt/stacks/sms-archive/postgres
# Media root (host): where attachments + thumbnails are stored persistently.
# To use a different HDD (e.g. Nextcloud mounted filesystem), change to:
# MEDIA_ROOT_HOST_PATH=/nextcloud/sms-archive/media/messages
MEDIA_ROOT_HOST_PATH=/opt/stacks/sms-archive/media/messages
# IMPORTANT: Container runs as UID 1001 (appuser). Host directory must be writable by that UID.
# Fix permissions if files not appearing:
#   sudo chown -R 1001:1001 "$MEDIA_ROOT_HOST_PATH"
#   sudo chmod 775 "$MEDIA_ROOT_HOST_PATH"
# If on a Nextcloud/FUSE mount that disallows chown, relax permissions (e.g. chmod 777) as a last resort.
# Optional import staging directory (host): drop XML export files here to import.
IMPORT_HOST_PATH=/opt/stacks/sms-archive/import

# ----------------------------------------------------------------------------
# Media Root (Container) - internal path inside app container
# ----------------------------------------------------------------------------
# This path is mounted from MEDIA_ROOT_HOST_PATH and injected into Spring property
# smsarchive.media.root via env var SMSARCHIVE_MEDIA_ROOT.
# NOTE: Inside the container the app writes to /app/media/messages (not the host absolute path).
SMSARCHIVE_MEDIA_ROOT=/app/media/messages

# ----------------------------------------------------------------------------
# Application Runtime Configuration
# ----------------------------------------------------------------------------
APP_BASE_URL=https://messages.example.com      # Public URL for frontend (used in generated links)
LOG_LEVEL=INFO                                 # Root log level (TRACE|DEBUG|INFO|WARN|ERROR)
TZ=UTC                                          # Container timezone (e.g. America/New_York)

# Optional security / JWT settings (override defaults for production)
JWT_SECRET=changeme-super-secret-key           # Must be long & random in production
JWT_ACCESS_TTL_MINUTES=15
JWT_REFRESH_TTL_DAYS=30

# ----------------------------------------------------------------------------
# Import Behavior (Optional)
# ----------------------------------------------------------------------------
# Run streaming import inline (blocking request) instead of async background thread.
# Usually keep false in production for large files.
smsarchive.import.inline=false
# Batch size for streaming persistence flush (tune for memory vs speed)
smsarchive.import.batchSize=500

# ----------------------------------------------------------------------------
# Frontend Build-Time API Base (Vite)
# ----------------------------------------------------------------------------
# VITE_API_BASE MUST point to the backend base URL (protocol + host + port/path).
# In dev (docker or local) often: http://localhost:8070
# In production behind reverse proxy: https://api-messages.example.com
VITE_API_BASE=http://localhost:${APP_PORT}

# ----------------------------------------------------------------------------
# CORS / CSP
# ----------------------------------------------------------------------------
# Comma-separated list of origins allowed to call backend APIs via browsers.
CORS_ALLOWED_ORIGINS=https://messages.example.com,https://api-messages.example.com
# Space-separated connect-src values for CSP (include wss if using websockets)
CSP_CONNECT_SRC=https://api-messages.example.com wss://api-messages.example.com

# ----------------------------------------------------------------------------
# Reverse Proxy / Network
# ----------------------------------------------------------------------------
# If you use an external docker network (e.g. nginx proxy manager) named 'proxy',
# ensure it exists:  docker network create proxy
# Otherwise remove the external network from docker-compose-example.yml.

# ----------------------------------------------------------------------------
# Operational Tips
# ----------------------------------------------------------------------------
# 1. Create host directories before compose up:
#      sudo mkdir -p /opt/stacks/sms-archive/postgres \
#                   /opt/stacks/sms-archive/media/messages \
#                   /opt/stacks/sms-archive/import
#    Or (different HDD):
#      sudo mkdir -p /nextcloud/sms-archive/postgres \
#                   /nextcloud/sms-archive/media/messages \
#                   /nextcloud/sms-archive/import
# 2. Permissions (if running as root inside container this suffices):
#      sudo chown -R root:root /opt/stacks/sms-archive
#      sudo chmod -R 755 /opt/stacks/sms-archive/media/messages
# 3. Fresh reset (DESTROYS DATA):
#      docker compose down -v
#      sudo rm -rf /opt/stacks/sms-archive/postgres/* /opt/stacks/sms-archive/media/messages/*
# 4. Switching to Nextcloud HDD later requires stopping containers, moving data, updating MEDIA_ROOT_HOST_PATH, then restart.
# 5. Confirm media mount after start:
#      docker exec sms-archive-app ls -ld /app/media/messages
# 6. Tail app logs for media root confirmation:
#      docker logs sms-archive-app | grep 'Resolved media root'
# ----------------------------------------------------------------------------
# End of file
